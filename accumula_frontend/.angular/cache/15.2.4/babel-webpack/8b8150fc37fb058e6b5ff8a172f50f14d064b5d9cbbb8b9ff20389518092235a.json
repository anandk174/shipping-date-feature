{"ast":null,"code":"import { PRODUCTS } from './mock-products';\nimport { of } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport class ProductService {\n  constructor() {}\n  getProducts() {\n    const products = of(PRODUCTS);\n    return products;\n  }\n}\nProductService.ɵfac = function ProductService_Factory(t) {\n  return new (t || ProductService)();\n};\nProductService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ProductService,\n  factory: ProductService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAEA,SAASA,QAAQ,QAAQ,iBAAiB;AAC1C,SAAqBC,EAAE,QAAQ,MAAM;;AAMrC,OAAM,MAAOC,cAAc;EAEzBC,eAAgB;EAEhBC,WAAW;IACT,MAAMC,QAAQ,GAAGJ,EAAE,CAACD,QAAQ,CAAC;IAC7B,OAAOK,QAAQ;EACjB;;AAPWH,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;SAAdA,cAAc;EAAAI,SAAdJ,cAAc;EAAAK,YAFb;AAAM","names":["PRODUCTS","of","ProductService","constructor","getProducts","products","factory","providedIn"],"sourceRoot":"","sources":["/Users/anandkumar/Documents/accumula_exercise/frontend/accumula-app/src/app/product.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Product } from './product';\nimport { PRODUCTS } from './mock-products';\nimport { Observable, of } from 'rxjs';\nimport { MessageService } from './message.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductService {\n\n  constructor() { }\n\n  getProducts(): Observable<Product[]> {\n    const products = of(PRODUCTS)\n    return products\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}